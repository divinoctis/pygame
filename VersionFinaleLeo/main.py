import pygame
import random
import sys
from class_game import*

SCREEN_WIDTH = 1920
SCREEN_HEIGHT = 1080
screen = pygame.display.set_mode((SCREEN_WIDTH, SCREEN_HEIGHT))
pygame.display.set_caption("GEODYSSEY")
pygame.display.set_icon(pygame.image.load("IMAGES/Logo.png"))
pygame.display.set_caption("indila jaune et les azteque")

WHITE = (255, 255, 255)
BLACK = (0, 0, 0)
RED = (255, 0, 0)
GREEN = (0, 255, 0)
BLUE = (0, 0, 255)
FPS = 60
dtTarget = 1000/FPS
dt = 0

class Game:
    def __init__(self):
        pygame.init()
        self.running = True
        self.decord = pygame.sprite.Group()
        self.all_sprites = pygame.sprite.Group()
        self.platforms = pygame.sprite.Group()
        self.playersprit = pygame.sprite.Group()
        self.ibflist = pygame.sprite.Group()

        self.mapnumber = [
            [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,             83, 85, 88, 77, 84, 85, 82, 85, 73, 76, 85, 82, 85, 73, 72, 85, 69, 72, 77, 72, 69, 70, 81, 76, 71, 80, 91,             70, 92, 74, 71, 90, 82, 81, 90, 82, 92, 90, 86, 80, 71, 70, 69, 76, 75, 74, 73, 74, 72, 85, 86, 85, 88, 85,             70, 85, 78, 85, 88, 70, 85, 73, 74, 73, 85, 74, 73, 72, 85, 70, 73, 85, 81, 88, 85, 70, 81, 70, 85, 81, 70,             85, 81, 74, 81, 85, 72, 81, 72, 85, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 128, 129, 130, 131, 132,             133, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132,             133, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 125, 128, 127,             128, 127, 130, 131, 132, 133, 121, 122, 133, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126,             127, 128, 129, 130, 131, 132, 133, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126,             127, 128, 129, 130, 131, 132, 133, 113, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 84, 92, 84, 92, 84, 92,             92, 84, 92, 92, 84, 92, 92, 50, 63, 49, 48, 47, 53, 57, 52, 50, 50, 53, 50, 55, 50, 54, 53, 56, 57, 54, 58,             58, 56, 57, 58, 66, 67, 66, 65, 58, 57, 65, 52, 57, 58, 59, 62, 58, 63, 48, 47, 173, 34, 35, 33, 36, 41,             44, 42, 43, 42, 43, 43, 42, 43, 45, 44, 41, 44, 33, 33, 33, 32, 33, 33, 33, 42, 43, 43, 42, 43, 43, 43, 42,             42, 41, 44, 34, 34, 35, 43, 43, 43, 45, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [95, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 69, 70, 71, 72, 73,             74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 83, 84, 85, 86, 87, 88, 89, 90, 91, 69, 70, 71, 72, 73, 74, 75, 76,             77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 69, 88, 168, 135, 135,             135, 135, 135, 135, 135, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 68, -1, -1,             -1, -1, -1, 185, 186, 187, 188, 189, 190, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 126,             73, 72, 85, 88, 85, 87, 85, 105, 88, 77, 102, 80, 81, 82, 83, 84, 86, 104, 87, -1, -1, -1],
            [120,128,128,117,118,128,128,130,125,127,131,131,131, 130, 115, 115, 117, 128, 128, 119, 120,             121, 122, 121, 122, 113, 122, 123, 113, 128, 123, 131, 125, 113, 131, 117, 115, 113, 120, 124, 115, 116,             113, 111, 122, 110, 111, 112, 94, 111, 122, 121, 122, 122, 121, 121, 120, 115, 111, 111, 96, 97, 107, 97,             92, 97, 97, 69, 70, 96, 72, 73, 74, 89, 169, -1, -1, -1, -1, -1, -1, 135, -1, -1, -1, -1, -1, -1, -1, -1,             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 191, 192, 193, 194, 195, -1, -1, -1, -1, -1,             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 129, 125, 124,             126, 128, 129, 130, 131, 132, 133, -1, -1, -1],
            [29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 41, 42, 42, 43, 44, 35, 39, 44, 45, 46, 44, 29, 30, 31, 32,             33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 30, 33, 35, 36, 45, 44, 45, 44, 30, 31, 32, 33, 34, 35, 36, 31,             30, 68, 68, 36, 45, 44, 43, 35, 31, 33, 41, 44, 36, 38, 37, 35, 36, 36, 38, 43, 172, -1, -1, -1, -1, -1,             -1, 135, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,             196, 197, 198, 199, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 44, 31, 31, 32, 33, 33, 35,             36, 36, 32, 34, 34, 34, 42, 43, 34, 35, 43, 43, 45, -1, -1, -1],
            [135,135,135,135,135,135,135,135,138,139,139,141,135, 135, 135, 135, 135, 135, 135, 135, 135,             135, 135, 135, 135, 135, 135, 135, 135, 135, 135, 135, 135, 135, 135, 135, 135, 135, 135, 135, 135, 135,             135, 135, 135, 135, 135, 135, 135, 135, 135, 135, 135, 135, 135, 135, 135, 135, 135, 138, 139, 140, 141,             135, 135, 135, 135, 135, 135, 135, 135, 135, 135, 135, -1, -1, -1, -1, -1, -1, -1, 135, -1, -1, -1, -1, -1,             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 200, 201, 202, 203, -1, -1, -1,             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 135, 135, 135, 135, 135, 135, 135, 135, 138, 139, 140, 141,             135, 135, 135, 135, 135, 135, 135, 135, -1, -1, -1],
            [-1, -1, -1, -1, -1, -1, -1, -1, 142,143,144,145, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,             -1, -1, 68, 68, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,             -1, -1, -1, -1, -1, -1, 142, 143, 144, 145, -1, -1, -1, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,             -1, -1, 4, 1, 2, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,             204, 205, 206, 207, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,             -1, 142, 143, 144, 145, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [-1, -1, -1, -1, -1, -1, -1, -1, 146,147,148, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,             -1, -1, 68, -1, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,             -1, -1, -1, -1, -1, -1, 146, 147, 148, -1, -1, -1, -1, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,             -1, -1, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,             208, 209, 210, 211, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,             -1, 146, 147, 148, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [-1, -1, -1, -1, -1, -1, -1, -1, 149,150,151, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,             -1, -1, 68, -1, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 134,             -1, -1, -1, -1, -1, -1, -1, 149, 150, 151, -1, -1, 10, -1, 10, -1, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1,             -1, -1, -1, 8, -1, -1, -1, -1, 0, 1, 2, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,             212, 213, 214, 215, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,             -1, 149, 150, 151, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [-1, -1, -1, -1, -1, -1, -1, 158,152,153,154, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 138, 68,             138, -1, -1, -1, -1, -1, -1, 152, 153, 154, -1, -1, -1, 10, 10, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,             -1, -1, -1, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,             216, 217, 218, 218, 219, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,             -1, -1, -1, -1, -1, -1, -1, -1, -1, 176, 177, 178, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,             -1, -1, -1, -1, 152, 153, 154, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [-1, -1, -1, -1, -1, -1, -1, -1, 155, 156, 157, 158, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 68, -1,             -1, -1, -1, -1, -1, -1, 155, 156, 157, 158, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,             -1, -1, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 220,             221, 222, 223, 224, 225, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,             -1, -1, -1, -1, -1, -1, -1, -1, 179, 180, 181, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,             -1, -1, -1, 155, 156, 157, 158, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [135,135,135,135,135, 135, 135, 135, 159, 160, 161, 162, 135, 135, 135, 135, 135, 135, 135, 135, 135,             135, 135, 135, 135, 135, 135, 135, 135, 135, 135, 135, 135, 135, 135, 135, 135, 135, 135, 135, 135, 135,             135, 135, 135, 135, 135, 170, 171, 135, 135, 135, 135, 135, 135, 135, 135, 135, 135, 159, 160, 161, 162,             135, 135, 135, 135, 135, 135, 135, 135, 135, 135, 135, 135, 135, 135, 135, 135, 135, 135, 9, -1, -1, -1,             -1, -1, -1, -1, -1, -1, -1, 0, 1, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 226, 227, 228, 229, 230, 231,             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,             -1, 182, 183, 184, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 135, 170, 171, 135, 135, 135, 135, 135, 159,             160, 161, 162, 135, 135, 135, 135, 135, 68, 68, 68, -1, -1, -1],
            [11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 21, 22, 23, 24, 25, 26, 27, 28, -1, -1, -1, 12, 11, 12, 14, 15, 16,             17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, -1, -1, -1, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23,             24, 25, 26, 27, 28, 23, 11, 14, 13, 14, 15, 16, 17, 18, 19, 20, 26, 23, 26, 23, 13, 12, 22, 23, 15, 15, 17,             26, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 21, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22,             23, 24, 25, 26, 27, 28, 11, 12, 13, 26, -1, 27, 26, -1, -1, -1, -1, -1, -1, -1, -1, -1, 23, 24, 22, 21, 25,             25, 26, 23, 11, 11, 20, 28, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 27, 13, 12, 22, 21, 13, 12, 13, 15, 20,             24, 13, 13, 12, 11, 26, 23, 13, 25, 26, -1, -1, -1],
            [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 63, 137, 137, 137, 51, 50, 51, 47, 48,             49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 134, 134, 134, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56,             57, 58, 59, 60, 61, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 47, 48, 49, 50, 51, 52,             53, 54, 55, 134, 134, 134, 134, 134, 134, 134, 134, 134, 134, 134, 134, 134, 134, 47, 48, 49, 50, 51, 52,             53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 50, -1, 74, 51, 137, 137, 137, 137, 137, 137,             137, 137, 137, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 47,             48, 49, 50, 51, 52, 53, 54, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, -1, -1, -1],
            [90, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 85, 136, 136, 136, 72, 73, 74, 75, 69,             70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 167, 167, 167, 70, 71, 72, 73, 74, 77, 76, 77, 78, 79,             93, 94, 94, 95, 96, 70, 69, 70, 69, 70, 80, 70, 69, 72, 69, 72, 71, 69, 72, 72, 84, 72, 71, 72, 71, 72, 80,             72, 69, 72, 167, 167, 167, 167, 167, 167, 167, 167, 167, 167, 167, 167, 167, 167, 78, 69, 78, 69, 72, 80,             72, 75, 72, 69, 72, 73, 69, 72, 80, 75, 85, 72, 84, 85, 77, 91, 60, 71, 70, 136, 136, 136, 136, 136, 136,             136, 136, 136, 72, 69, 72, 71, 72, 71, 72, 81, 72, 94, 72, 71, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 86,             69, 70, 71, 72, 73, 74, 75, 76, 96, 97, 77, 97, 77, 97, 80, 69, 97, 80, 84, -1, -1, -1]]
        for ligne in range(len(self.mapnumber)):
            for case in range(len(self.mapnumber[ligne])):
                self.decords = decord(case, ligne, self.mapnumber[ligne][case],self)
                self.decord.add(self.decords)

        for i in range(6):
            self.ran = random.randint(2,3)
            self.ibf = imgfond2(self,self.ran,i)
            self.ibflist.add(self.ibf)
            print(self.ran)



        self.spikes = spike(-260, SCREEN_HEIGHT -150,self)

        #self.boule = boul(1000,SCREEN_HEIGHT -20-600,1000,self)

        self.door = Door(750, SCREEN_HEIGHT - 120, self)
        self.all_sprites.add(self.door)

        self.player = Player(50, SCREEN_HEIGHT - 200, self)
        self.playersprit.add(self.player)

        self.camera_offset_x = 0

        self.startMenu = True

        self.menuinstance = menu(1)
        self.imagemenu = pygame.image.load("VersionFinaleLeo/back.png") #REMETTRE "back.jpg" POUR LE FINAL
        self.menuB0 = menu(1)
        self.menuB1 = menu(2)
        self.menuB2 = menu(3)
        self.menuB3 = menu(4)

        self.lianes = liane(self,600,1080-220)
        self.lianes1 = liane(self, 600, 1080 - 420)
        self.lianes2 = liane(self, 600, 1080 - 620)
        self.tp = tprect(self)

        self.coordonatelianel1 = self.lianes.getcoordonate()
        self.coordonatelianel2 = self.lianes1.getcoordonate()
        self.coordonatelianel3 = self.lianes2.getcoordonate()
        self.onlian=False
        self.postptarget = self.tp.getpostp()
        self.dead = True
        self.kill = False

        self.ground = Platform(-300, SCREEN_HEIGHT -225, 20000, 20, self)
        self.all_sprites.add(self.ground)
        self.platforms.add(self.ground)

    def draw(self):
        screen.fill(BLACK)
        for sprite in self.all_sprites:
            sprite.draw(screen)
        for sprite in self.ibflist:
            sprite.draw(screen)
        for sprite in self.decord:
            sprite.draw(screen)
        for sprite in self.playersprit:
            sprite.draw(screen)
        self.player.drawlife(screen)
        #self.tp.draw(screen)
        #self.spikes.draw(screen)
        #self.boule.draw(screen)


        pygame.display.flip()


    def update(self,dt):


        self.coordonateplayer = self.player.givecoord()
        domage = self.spikes.update(self.coordonateplayer)

        keys = pygame.key.get_pressed()
        if keys[pygame.K_SPACE]:
            self.player.jump_action()

        self.player.update(self.platforms,dt)
        self.player.veriftp(self.postptarget)

            #self.dead = self.boule.update(self.coordonateplayer,dt)

        self.camera_offset_x = SCREEN_WIDTH // 2 - self.player.rect.x - self.player.rect.width // 2

        if domage:
            self.dead = self.player.lifesystem(-1)

    def run(self,dt):

        while self.running :
            TickStart = pygame.time.get_ticks()

            for event in pygame.event.get():
                if event.type == pygame.QUIT:
                    exit()

            while self.startMenu :
                screen.blit(self.menuinstance.imageMenu, (0, 0))
                detectQuit()
                pos = pygame.mouse.get_pos()
                self.menuinstance.drawfont(screen)
                self.menuB0.draw(screen)
                self.startMenu= self.menuB0.detecteclick(pos)
                self.menuB1.draw(screen)
                self.menuB2.draw(screen)
                self.menuB3.draw(screen)
                self.running = self.menuB3.detecteclick(pos)

                pygame.display.flip()

            if self.dead == False:
                self.running =False

            self.update(dt)
            self.draw()

            TickEnd = pygame.time.get_ticks()
            dt = TickEnd - TickStart
            if (dt< dtTarget):
                pygame.time.wait(int(dtTarget - dt))
                dt = dtTarget


while 1:
    g = Game()
    g.run(dt)